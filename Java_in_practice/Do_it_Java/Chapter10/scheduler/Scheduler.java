// 인터페이스와 다형성
// 인터페이스는 "Client Code"와 서비스를 제공하는 "객체" 사이의 약속이다.
// 어떤 객체가 어떤 interface 타입이라 함은 그 interface가 제공하는 메서드를 구현했다는 의미이다.
// Client는 interface가 어떻게 구현되었는지에 상관없이 interface의 정의만을 보고 사용할 수 있다. (ex: JDBC)
// 다양한 구현이 필요한 인터페이스를 설계하는 일은 매우 중요한 일이다.

// 상담원의 콜 대기열을 어떻게 처리할 것인가에 대한 스케줄러를 인터페이스로 만든다.
// 각 정책에 따라 인터페이스를 구현해주면 된다.
// 클라이언트의 입장에서는 각 인터페이스가 어떻게 구현되어 있는가를 파악하기 보다 구현된 인터페이스를 어떻게 사용해야하는가에 중점을 맞춰야 한다.
// 이때 인터페이스를 클라이언트 코드의 스펙이라고 부른다. 즉, 클라이언트는 구현된 내용을 분석할 필요 없이 스케줄러의 설계 문서 즉, 스펙을 보고
// 어떤 구현 인터페이스를 사용할지를 결정할 수 있다.

package scheduler;

public interface Scheduler {
	void getNextCall();
	void sendCallToAgent();
}
